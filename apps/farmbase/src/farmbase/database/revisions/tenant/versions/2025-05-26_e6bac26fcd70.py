"""empty message

Revision ID: e6bac26fcd70
Revises: 
Create Date: 2025-05-26 11:05:24.239364

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'e6bac26fcd70'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_note_location_coordinates', table_name='note', postgresql_using='gist')
    op.drop_table('note')
    op.alter_column('farm_contact', 'role',
               existing_type=sa.VARCHAR(length=100),
               type_=sa.Enum('OWNER', 'FAMILY', 'WORKER', 'ADVISOR', name='farm_contact_role_enum'),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('farm_contact', 'role',
               existing_type=sa.Enum('OWNER', 'FAMILY', 'WORKER', 'ADVISOR', name='farm_contact_role_enum'),
               type_=sa.VARCHAR(length=100),
               existing_nullable=False)
    op.create_table('note',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('field_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('farm_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('planting_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('note_date', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('note_text', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('location_coordinates', sa.NullType(), autoincrement=False, nullable=True),
    sa.Column('image_path', sa.VARCHAR(length=1024), autoincrement=False, nullable=True),
    sa.Column('contact_id_created_by', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_created', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('tags', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['contact_id_created_by'], ['contact.id'], name='note_contact_id_created_by_fkey'),
    sa.ForeignKeyConstraint(['farm_id'], ['farm.id'], name='note_farm_id_fkey'),
    sa.ForeignKeyConstraint(['field_id'], ['field.id'], name='note_field_id_fkey'),
    sa.ForeignKeyConstraint(['planting_id'], ['planting.id'], name='note_planting_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='note_pkey')
    )
    op.create_index('idx_note_location_coordinates', 'note', ['location_coordinates'], unique=False, postgresql_using='gist')
    # ### end Alembic commands ###
